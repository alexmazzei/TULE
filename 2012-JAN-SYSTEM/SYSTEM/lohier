(in-package "USER")

(defvar *HOME-DIR* "/home/lesmo/TULE/DOWNL/2011-OCT-TULE/SYSTEM/")
(defvar *LABELLIST* nil)
; *** the next two include only classe names
(defvar *ALL-SUBCAT-CLASSES* nil)
(defvar *ABSTRACT-SUBCAT-CLASSES* nil)
; *** the next three include the actual class definitions
(defvar *SUBCAT-CLASSES* nil)
(defvar *VERBAL-LOCUTIONS-ITA* nil)
(defvar *VERBAL-LOCUTIONS-ENG* nil)

(defun uconcat (&rest x)
  (cond (x (format nil "~{~a~}" x)) ))

(defun concat (&rest x) (identity (intern (string (apply #'uconcat x)))))

(defun build-file-name (filen) (string (concat *HOME-DIR* filen)))

(load (build-file-name "ALLLANG/PROC-ALL/utilities"))
(load (build-file-name "ALLLANG/PROC-ALL/MORPHO-PROC-ALL/char-funct"))

(defun load-labhier ()
   (with-open-file (lport (build-file-name "ALLLANG/KB-ALL/SUBCAT-KB-ALL/lab-hierarchy.dat")
                          :direction :input :if-does-not-exist :error)
     (do ((nxtnode (read lport nil 'end) (read lport nil 'end)))
         ((eq nxtnode 'end) 'ok)
         (putprop (first nxtnode) (second nxtnode) 'more-spec-labels)
         (setq *LABELLIST* (append (second nxtnode) *LABELLIST*))
         (dolist (nxtdaughter (second nxtnode))
           (add-prop-val nxtdaughter 'more-gen-labels (first nxtnode))))))

(load (build-file-name "ALLLANG/KB-ALL/SUBCAT-KB-ALL/subc-classes.dat"))
(load (build-file-name "ITALIAN/KB-ITA/SUBCAT-KB-ITA/verbal-locutions-ita.dat"))
(load (build-file-name "ENGLISH/KB-ENG/SUBCAT-KB-ENG/verbal-locutions-eng.dat"))

(load-labhier)

(load (build-file-name "ALLLANG/PROC-ALL/TAGGER-PROC-ALL/postagger"))
(load (build-file-name "ALLLANG/PROC-ALL/PARSER-PROC-ALL/hier-funct"))
(compile-file (build-file-name "ALLLANG/PROC-ALL/SUBCAT-PROC-ALL/subc-hier"))
(load (build-file-name "ALLLANG/PROC-ALL/SUBCAT-PROC-ALL/subc-hier"))

; *** the next loads the definition of the classes, applying inheritance,
;     but without applying transformations. It also saves the list of all cases governed by a
;     prepositions into the file ALLLANG/KB-ALL/SUBCAT-KB-ALL/verbclass-marked-cases.dat)
(setq *ALL-SUBCAT-CLASSES* (append *SUBCAT-CLASSES* *VERBAL-LOCUTIONS-ITA* *VERBAL-LOCUTIONS-ENG*))
   
(set-verb-class-def *ALL-SUBCAT-CLASSES*)

(set-governed-preps (mapcar #'first *ALL-SUBCAT-CLASSES*) *ABSTRACT-SUBCAT-CLASSES*)
				; set-governed-preps defined in subc-hier.lisp

(break "TEST")

(load (build-file-name "ALLLANG/KB-ALL/SUBCAT-KB-ALL/transf-def.dat"))
(compile-file (build-file-name "ALLLANG/PROC-ALL/SUBCAT-PROC-ALL/transf-hier"))
(load (build-file-name "ALLLANG/PROC-ALL/SUBCAT-PROC-ALL/transf-hier"))

(transform-hierarchy)

(break "before writing on file")
(print-hierarchy)


